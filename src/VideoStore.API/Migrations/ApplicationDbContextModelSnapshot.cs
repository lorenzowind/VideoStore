// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoStore.API.Data;

namespace VideoStore.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("VideoStore.API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_Name");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VideoStore.API.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<sbyte>("Launch")
                        .HasColumnType("tinyint");

                    b.Property<int>("ParentalRating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Launch")
                        .HasDatabaseName("idx_Launch");

                    b.HasIndex("Title")
                        .HasDatabaseName("idx_Title");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("VideoStore.API.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("FK_Customer_idx");

                    b.HasIndex("MovieId")
                        .HasDatabaseName("FK_Movie_idx");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("VideoStore.API.Models.Customer", b =>
                {
                    b.OwnsOne("VideoStore.Core.Domain.BirthDate", "BirthDate", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime")
                                .HasColumnName("BirthDate");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("VideoStore.Core.Domain.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("CPF");

                            b1.HasKey("CustomerId");

                            b1.HasIndex("Number")
                                .HasDatabaseName("idx_CPF");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("BirthDate");

                    b.Navigation("Cpf");
                });

            modelBuilder.Entity("VideoStore.API.Models.Rental", b =>
                {
                    b.HasOne("VideoStore.API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoStore.API.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("VideoStore.Core.Domain.RentalDate", "RentalDate", b1 =>
                        {
                            b1.Property<int>("RentalId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime")
                                .HasColumnName("RentalDate");

                            b1.HasKey("RentalId");

                            b1.ToTable("Rentals");

                            b1.WithOwner()
                                .HasForeignKey("RentalId");
                        });

                    b.OwnsOne("VideoStore.Core.Domain.ReturnDate", "ReturnDate", b1 =>
                        {
                            b1.Property<int>("RentalId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime")
                                .HasColumnName("ReturnDate");

                            b1.HasKey("RentalId");

                            b1.ToTable("Rentals");

                            b1.WithOwner()
                                .HasForeignKey("RentalId");
                        });

                    b.Navigation("Customer");

                    b.Navigation("Movie");

                    b.Navigation("RentalDate");

                    b.Navigation("ReturnDate");
                });
#pragma warning restore 612, 618
        }
    }
}
